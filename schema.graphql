type CommitStake @entity(immutable: true) {
  id: Bytes!
  stakingId: BigInt! # uint256
  commitment: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Config @entity(immutable: false) {
  id: Int8! # uint256
  bank: Bytes! # address
  manager: Bytes! # address
  token: Bytes! # address
  interestRate: BigInt! # uint256
  stakeDuration: BigInt! # uint256
  cooldownDuration: BigInt! # uint256
  maxStake: BigInt! # uint256
  minStake: BigInt! # uint256
  isActive: Boolean! # bool
  isTopupEnabled: Boolean! # bool
  isPublic: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestUnstake @entity(immutable: true) {
  id: Bytes!
  stakingId: BigInt! # uint256
  recipient: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Staked @entity(immutable: true) {
  id: Bytes!
  stakingId: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ToppedUp @entity(immutable: true) {
  id: Bytes!
  stakingId: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unstaked @entity(immutable: true) {
  id: Bytes!
  stakingId: BigInt! # uint256
  recipient: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
